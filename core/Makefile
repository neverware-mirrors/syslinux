## -----------------------------------------------------------------------
##
##   Copyright 1998-2009 H. Peter Anvin - All Rights Reserved
##   Copyright 2009-2019 Intel Corporation; author: H. Peter Anvin
##
##   This program is free software; you can redistribute it and/or modify
##   it under the terms of the GNU General Public License as published by
##   the Free Software Foundation, Inc., 53 Temple Place Ste 330,
##   Boston MA 02111-1307, USA; either version 2 of the License, or
##   (at your option) any later version; incorporated herein by reference.
##
## -----------------------------------------------------------------------

#
# General Makefile for the Syslinux core
#

include $(MAKEDIR)/elf.mk
-include $(objdir)/version.mk

INCLUDE  += -I$(SRC)/include -I$(com32)/lib -I$(SRC)/fs/pxe

# This is very similar to cp437; technically it's for Norway and Denmark,
# but it's unlikely the characters that are different will be used in
# filenames by other users.
CODEPAGE = cp865

# Directories to actually build from
SRCDIRS := common elflink fs mem include $(fwclass)

# Export library files
LIBCORE_FILES = libcore.so libcore.weak

# Libraries to link with the core
CORE_LIBS = $(objdir)/com32/lib/libcom32.a

# Core preparation program
PREPCORE  = $(objdir)/prepcore/$(fwclass)/prepcore

# All primary source files for the main syslinux files
SRCFILES  := $(sort $(shell find $(SRCDIRS:%=$(SRC)/%) \
	      -name tests -prune -o -type f -print))
NASMSRC	  := $(filter %.asm,$(SRCFILES))
NASMHDR	  := $(filter %.inc,$(SRCFILES))
CSRC	  := $(filter %.c  ,$(SRCFILES))
SSRC	  := $(filter %.S  ,$(SRCFILES))
CHDR	  := $(filter %.h  ,$(SRCFILES))
ALLSRC    := $(NASMSRC) $(NASMHDR) $(CSRC) $(SSRC) $(CHDR)

COBJ	  := $(CSRC:$(SRC)/%.c=%.o)
SOBJ	  := $(SSRC:$(SRC)/%.S=%.o)
NASMOBJ   := $(NASMSRC:$(SRC)/%.asm=%.o)
ALLOBJ    := $(COBJ) $(SOBJ) $(NASMOBJ)

DATE_DEFS = -DDATE_STR='"$(DATE)"' -DHEXDATE="$(HEXDATE)"

%.a:
	rm -f $@
	$(AR) cq $@ $^
	$(RANLIB) $@

include $(SRC)/Makefile.$(fwclass)

CORE_LIBOBJS ?= $(ALLOBJ)

# This makes the core quite a bit smaller, but requires that the proper
# __export tags are in place. It would be very good to add the same things
# to the libraries, especially libcom32, for the same reason.
CFLAGS += -fvisibility=hidden

CFLAGS += -D__SYSLINUX_CORE__ -I$(objdir)

# The DATE is set on the make command line when building binaries for
# official release.  Otherwise, substitute a hex string that is pretty much
# guaranteed to be unique to be unique from build to build.
ifndef HEXDATE
HEXDATE := $(shell $(PERL) $(SRC)/../now.pl $(SRCS))
endif
ifndef DATE
DATE    := $(shell sh $(SRC)/../gen-id.sh $(VERSION) $(HEXDATE))
endif

CORELDSCRIPT ?= $(SRC)/$(fwclass)/syslinux.ld

CORELDFLAGS += $(MAIN_LDFLAGS) -pie --no-dynamic-linker \
	--unresolved-symbols=report-all \
	-E -M -T $(CORELDSCRIPT)

all: makeoutputdirs $(BTARGET) $(LIBCORE_FILES)

makeoutputdirs:
	@mkdir -p $(sort $(dir $(ALLOBJ)))

libcore.S: $(ETARGET) $(SRC)/export.pl
	$(PERL) '$(SRC)/export.pl' libcore.S libcore.weak $(ETARGET)

libcore.weak: libcore.S
	: $@ generated by side effect from $<

libcore.so: libcore.o
	$(LD) $(LDFLAGS) -shared -o $@ $<

$(CORE_LIB): $(CORE_LIBOBJS)

fs/fat/codepage.o: SFLAGS += -DCODEPAGE=\"$(objdir)/codepage/$(CODEPAGE).cp\"

install: installer

install-lib: installer

install-all: install install-lib

netinstall: installer

tidy dist:
	for d in $(find . -type d -print) ; do \
	( cd "$$d" ; \
	  rm -f *.o *.a .*.d *.lst \
	        *.elf stupid.* patch.offset .depend \
	        *.elf.tmp *.sym \
	        *.lsr *.map *.sec *.raw \
	); done
	rm -f $(OBSOLETE) $(LIB)

clean: tidy

spotless: clean
	rm -f $(BTARGET) *.bin *_bin.c

# Include dependencies files
-include $(shell find $(OBJ) -name '.*.d' -type f -print)
